{
  "compilerOptions": {
    "jsx": "react-jsx",
    "target": "esnext",
    "lib": [
      "DOM",
      "DOM.Iterable",
      "ESNext"
    ],
    "types": [
      "vite/client",
      "vitest/globals"
    ],
    "outDir": "dist",
    "rootDir": "src",
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strictNullChecks": true,
    "declaration": true,
    "strict": true,
    "noImplicitAny": true,
    "forceConsistentCasingInFileNames": true,
    "exactOptionalPropertyTypes": true,
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "baseUrl": ".",

    "noUncheckedIndexedAccess": true,       // adds | undefined when indexing arrays/objects
    "noPropertyAccessFromIndexSignature": true, // ban obj.foo when only [key: string] exists
    "useUnknownInCatchVariables": true,     // catch (e: unknown) instead of any
    "noImplicitReturns": true,              // every code-path must return a value
    "noFallthroughCasesInSwitch": true,     // disallow fall-through
    "noImplicitOverride": true,             // require explicit `override` (harmless if you avoid classes)


    "plugins": [
      {
        "name": "@effect/language-service"
      }
    ]
  },
  "include": [
    "src/index.ts"
  ],
  "ts-node": {
    "transpileOnly": true,
    "transpiler": "ts-node/transpilers/swc-experimental"
  }
}
